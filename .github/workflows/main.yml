name: Docker Image CI
env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
on:
  push:
    branches: [ "master","main" ]
  pull_request:
    branches: [ "master","main" ]

jobs:

  build:

    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Check out Manifest
        uses: actions/checkout@master
        with:
          repository: Ollebo/manifests
          path: manifest
          ssh-key: ${{ secrets.SAM_SSH }}
      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: | 
            helm template chart/  >> manifest/mapserver/deploy.yaml
            cat manifest/mapserver/deploy.yaml
      - name: GIT commit and push all changed files
        env: 
          CI_COMMIT_MESSAGE: Continuous Integration Build Artifacts
          CI_COMMIT_AUTHOR: Continuous Integration
        run: |
          cd manifest
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "username@users.noreply.github.com"
          git add mapserver/deploy.yaml
          git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push
      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          # This data can be any valid JSON from a previous step in the GitHub Action
          payload: |
             {"text":"The repo ${{ github.repository }} is build and ready for cluster to deploy"}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      
